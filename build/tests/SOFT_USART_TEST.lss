
SOFT_USART_TEST.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000003b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000340  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000cc  00800100  00800100  000003b4  2**0
                  ALLOC
  3 .stab         00000714  00000000  00000000  000003b4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000010ca  00000000  00000000  00000ac8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00001b92  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001ba4  2**2
                  CONTENTS, READONLY
  7 .debug_info   000005f4  00000000  00000000  00001be4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000005a2  00000000  00000000  000021d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000001a  00000000  00000000  0000277a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000208  00000000  00000000  00002794  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	33 c0       	rjmp	.+102    	; 0x68 <__ctors_end>
   2:	00 00       	nop
   4:	4c c0       	rjmp	.+152    	; 0x9e <__bad_interrupt>
   6:	00 00       	nop
   8:	4a c0       	rjmp	.+148    	; 0x9e <__bad_interrupt>
   a:	00 00       	nop
   c:	48 c0       	rjmp	.+144    	; 0x9e <__bad_interrupt>
   e:	00 00       	nop
  10:	46 c0       	rjmp	.+140    	; 0x9e <__bad_interrupt>
  12:	00 00       	nop
  14:	48 c1       	rjmp	.+656    	; 0x2a6 <__vector_5>
  16:	00 00       	nop
  18:	42 c0       	rjmp	.+132    	; 0x9e <__bad_interrupt>
  1a:	00 00       	nop
  1c:	40 c0       	rjmp	.+128    	; 0x9e <__bad_interrupt>
  1e:	00 00       	nop
  20:	3e c0       	rjmp	.+124    	; 0x9e <__bad_interrupt>
  22:	00 00       	nop
  24:	3c c0       	rjmp	.+120    	; 0x9e <__bad_interrupt>
  26:	00 00       	nop
  28:	3a c0       	rjmp	.+116    	; 0x9e <__bad_interrupt>
  2a:	00 00       	nop
  2c:	38 c0       	rjmp	.+112    	; 0x9e <__bad_interrupt>
  2e:	00 00       	nop
  30:	36 c0       	rjmp	.+108    	; 0x9e <__bad_interrupt>
  32:	00 00       	nop
  34:	34 c0       	rjmp	.+104    	; 0x9e <__bad_interrupt>
  36:	00 00       	nop
  38:	32 c0       	rjmp	.+100    	; 0x9e <__bad_interrupt>
  3a:	00 00       	nop
  3c:	30 c0       	rjmp	.+96     	; 0x9e <__bad_interrupt>
  3e:	00 00       	nop
  40:	2e c0       	rjmp	.+92     	; 0x9e <__bad_interrupt>
  42:	00 00       	nop
  44:	2c c0       	rjmp	.+88     	; 0x9e <__bad_interrupt>
  46:	00 00       	nop
  48:	2a c0       	rjmp	.+84     	; 0x9e <__bad_interrupt>
  4a:	00 00       	nop
  4c:	28 c0       	rjmp	.+80     	; 0x9e <__bad_interrupt>
  4e:	00 00       	nop
  50:	26 c0       	rjmp	.+76     	; 0x9e <__bad_interrupt>
  52:	00 00       	nop
  54:	24 c0       	rjmp	.+72     	; 0x9e <__bad_interrupt>
  56:	00 00       	nop
  58:	22 c0       	rjmp	.+68     	; 0x9e <__bad_interrupt>
  5a:	00 00       	nop
  5c:	20 c0       	rjmp	.+64     	; 0x9e <__bad_interrupt>
  5e:	00 00       	nop
  60:	1e c0       	rjmp	.+60     	; 0x9e <__bad_interrupt>
  62:	00 00       	nop
  64:	1c c0       	rjmp	.+56     	; 0x9e <__bad_interrupt>
	...

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e4       	ldi	r30, 0x40	; 64
  7c:	f3 e0       	ldi	r31, 0x03	; 3
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e0       	ldi	r26, 0x00	; 0
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ac 3c       	cpi	r26, 0xCC	; 204
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	15 d0       	rcall	.+42     	; 0xc6 <main>
  9c:	4f c1       	rjmp	.+670    	; 0x33c <_exit>

0000009e <__bad_interrupt>:
  9e:	b0 cf       	rjmp	.-160    	; 0x0 <__vectors>

000000a0 <test_read>:
    }
}
void test_read()
{

    softuart_config(4, 3);
  a0:	63 e0       	ldi	r22, 0x03	; 3
  a2:	84 e0       	ldi	r24, 0x04	; 4
    softuart_enable_recv();
  a4:	11 d0       	rcall	.+34     	; 0xc8 <softuart_config>
    usart_enable(MYUBRR);
  a6:	3f d0       	rcall	.+126    	; 0x126 <softuart_enable_recv>
  a8:	83 e3       	ldi	r24, 0x33	; 51
  aa:	90 e0       	ldi	r25, 0x00	; 0
  ac:	29 d1       	rcall	.+594    	; 0x300 <usart_enable>
    softuart_enable_recv();
    usart_enable(MYUBRR);
    uint8_t d = 0;
    while (1)
    {
        usart_write(softuart_read());
  ae:	c0 e9       	ldi	r28, 0x90	; 144
  b0:	d1 e0       	ldi	r29, 0x01	; 1
  b2:	f2 d0       	rcall	.+484    	; 0x298 <softuart_read>
  b4:	34 d1       	rcall	.+616    	; 0x31e <usart_write>
  b6:	88 e8       	ldi	r24, 0x88	; 136
  b8:	93 e1       	ldi	r25, 0x13	; 19
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  ba:	fe 01       	movw	r30, r28
  bc:	31 97       	sbiw	r30, 0x01	; 1
  be:	f1 f7       	brne	.-4      	; 0xbc <test_read+0x1c>
  c0:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  c2:	d9 f7       	brne	.-10     	; 0xba <test_read+0x1a>
  c4:	f6 cf       	rjmp	.-20     	; 0xb2 <test_read+0x12>

000000c6 <main>:
#include "soft_usart.h"
#include "util/delay.h"
#include "usart.h"
int main()
{
  c6:	ec df       	rcall	.-40     	; 0xa0 <test_read>

000000c8 <softuart_config>:
  c8:	9e ef       	ldi	r25, 0xFE	; 254
  ca:	98 0f       	add	r25, r24
  cc:	96 30       	cpi	r25, 0x06	; 6
  ce:	48 f5       	brcc	.+82     	; 0x122 <softuart_config+0x5a>
  d0:	9a b1       	in	r25, 0x0a	; 10
  d2:	41 e0       	ldi	r20, 0x01	; 1
  d4:	50 e0       	ldi	r21, 0x00	; 0
  d6:	9a 01       	movw	r18, r20
  d8:	08 2e       	mov	r0, r24
  da:	01 c0       	rjmp	.+2      	; 0xde <softuart_config+0x16>
  dc:	22 0f       	add	r18, r18
  de:	0a 94       	dec	r0
  e0:	ea f7       	brpl	.-6      	; 0xdc <softuart_config+0x14>
  e2:	32 2f       	mov	r19, r18
  e4:	30 95       	com	r19
  e6:	93 23       	and	r25, r19
  e8:	9a b9       	out	0x0a, r25	; 10
  ea:	9b b1       	in	r25, 0x0b	; 11
  ec:	29 2b       	or	r18, r25
  ee:	2b b9       	out	0x0b, r18	; 11
  f0:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <RX>
  f4:	9e ef       	ldi	r25, 0xFE	; 254
  f6:	96 0f       	add	r25, r22
  f8:	96 30       	cpi	r25, 0x06	; 6
  fa:	88 f4       	brcc	.+34     	; 0x11e <softuart_config+0x56>
  fc:	86 17       	cp	r24, r22
  fe:	79 f0       	breq	.+30     	; 0x11e <softuart_config+0x56>
 100:	8b b1       	in	r24, 0x0b	; 11
 102:	06 2e       	mov	r0, r22
 104:	01 c0       	rjmp	.+2      	; 0x108 <softuart_config+0x40>
 106:	44 0f       	add	r20, r20
 108:	0a 94       	dec	r0
 10a:	ea f7       	brpl	.-6      	; 0x106 <softuart_config+0x3e>
 10c:	84 2b       	or	r24, r20
 10e:	8b b9       	out	0x0b, r24	; 11
 110:	8a b1       	in	r24, 0x0a	; 10
 112:	48 2b       	or	r20, r24
 114:	4a b9       	out	0x0a, r20	; 10
 116:	60 93 cb 01 	sts	0x01CB, r22	; 0x8001cb <TX>
 11a:	81 e0       	ldi	r24, 0x01	; 1
 11c:	08 95       	ret
 11e:	81 e0       	ldi	r24, 0x01	; 1
 120:	08 95       	ret
 122:	80 e0       	ldi	r24, 0x00	; 0
 124:	08 95       	ret

00000126 <softuart_enable_recv>:
 126:	78 94       	sei
 128:	e8 e6       	ldi	r30, 0x68	; 104
 12a:	f0 e0       	ldi	r31, 0x00	; 0
 12c:	80 81       	ld	r24, Z
 12e:	84 60       	ori	r24, 0x04	; 4
 130:	80 83       	st	Z, r24
 132:	ed e6       	ldi	r30, 0x6D	; 109
 134:	f0 e0       	ldi	r31, 0x00	; 0
 136:	20 81       	ld	r18, Z
 138:	81 e0       	ldi	r24, 0x01	; 1
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	00 90 02 01 	lds	r0, 0x0102	; 0x800102 <RX>
 140:	02 c0       	rjmp	.+4      	; 0x146 <softuart_enable_recv+0x20>
 142:	88 0f       	add	r24, r24
 144:	99 1f       	adc	r25, r25
 146:	0a 94       	dec	r0
 148:	e2 f7       	brpl	.-8      	; 0x142 <softuart_enable_recv+0x1c>
 14a:	82 2b       	or	r24, r18
 14c:	80 83       	st	Z, r24
 14e:	08 95       	ret

00000150 <softuart_recv>:
 150:	20 91 6d 00 	lds	r18, 0x006D	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
 154:	61 e0       	ldi	r22, 0x01	; 1
 156:	70 e0       	ldi	r23, 0x00	; 0
 158:	ab 01       	movw	r20, r22
 15a:	00 90 02 01 	lds	r0, 0x0102	; 0x800102 <RX>
 15e:	02 c0       	rjmp	.+4      	; 0x164 <softuart_recv+0x14>
 160:	44 0f       	add	r20, r20
 162:	55 1f       	adc	r21, r21
 164:	0a 94       	dec	r0
 166:	e2 f7       	brpl	.-8      	; 0x160 <softuart_recv+0x10>
 168:	94 2f       	mov	r25, r20
 16a:	90 95       	com	r25
 16c:	92 23       	and	r25, r18
 16e:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
 172:	81 e0       	ldi	r24, 0x01	; 1
 174:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <rx_listening>
 178:	80 ed       	ldi	r24, 0xD0	; 208
 17a:	90 e0       	ldi	r25, 0x00	; 0
 17c:	01 97       	sbiw	r24, 0x01	; 1
 17e:	f1 f7       	brne	.-4      	; 0x17c <softuart_recv+0x2c>
 180:	cb 01       	movw	r24, r22
 182:	00 90 02 01 	lds	r0, 0x0102	; 0x800102 <RX>
 186:	02 c0       	rjmp	.+4      	; 0x18c <softuart_recv+0x3c>
 188:	88 0f       	add	r24, r24
 18a:	99 1f       	adc	r25, r25
 18c:	0a 94       	dec	r0
 18e:	e2 f7       	brpl	.-8      	; 0x188 <softuart_recv+0x38>
 190:	49 b1       	in	r20, 0x09	; 9
 192:	50 e0       	ldi	r21, 0x00	; 0
 194:	48 23       	and	r20, r24
 196:	59 23       	and	r21, r25
 198:	21 e0       	ldi	r18, 0x01	; 1
 19a:	45 2b       	or	r20, r21
 19c:	09 f4       	brne	.+2      	; 0x1a0 <softuart_recv+0x50>
 19e:	20 e0       	ldi	r18, 0x00	; 0
 1a0:	e0 ed       	ldi	r30, 0xD0	; 208
 1a2:	f0 e0       	ldi	r31, 0x00	; 0
 1a4:	31 97       	sbiw	r30, 0x01	; 1
 1a6:	f1 f7       	brne	.-4      	; 0x1a4 <softuart_recv+0x54>
 1a8:	49 b1       	in	r20, 0x09	; 9
 1aa:	50 e0       	ldi	r21, 0x00	; 0
 1ac:	48 23       	and	r20, r24
 1ae:	59 23       	and	r21, r25
 1b0:	45 2b       	or	r20, r21
 1b2:	09 f0       	breq	.+2      	; 0x1b6 <softuart_recv+0x66>
 1b4:	22 60       	ori	r18, 0x02	; 2
 1b6:	e0 ed       	ldi	r30, 0xD0	; 208
 1b8:	f0 e0       	ldi	r31, 0x00	; 0
 1ba:	31 97       	sbiw	r30, 0x01	; 1
 1bc:	f1 f7       	brne	.-4      	; 0x1ba <softuart_recv+0x6a>
 1be:	49 b1       	in	r20, 0x09	; 9
 1c0:	50 e0       	ldi	r21, 0x00	; 0
 1c2:	48 23       	and	r20, r24
 1c4:	59 23       	and	r21, r25
 1c6:	45 2b       	or	r20, r21
 1c8:	09 f0       	breq	.+2      	; 0x1cc <softuart_recv+0x7c>
 1ca:	24 60       	ori	r18, 0x04	; 4
 1cc:	e0 ed       	ldi	r30, 0xD0	; 208
 1ce:	f0 e0       	ldi	r31, 0x00	; 0
 1d0:	31 97       	sbiw	r30, 0x01	; 1
 1d2:	f1 f7       	brne	.-4      	; 0x1d0 <softuart_recv+0x80>
 1d4:	49 b1       	in	r20, 0x09	; 9
 1d6:	50 e0       	ldi	r21, 0x00	; 0
 1d8:	48 23       	and	r20, r24
 1da:	59 23       	and	r21, r25
 1dc:	45 2b       	or	r20, r21
 1de:	09 f0       	breq	.+2      	; 0x1e2 <softuart_recv+0x92>
 1e0:	28 60       	ori	r18, 0x08	; 8
 1e2:	e0 ed       	ldi	r30, 0xD0	; 208
 1e4:	f0 e0       	ldi	r31, 0x00	; 0
 1e6:	31 97       	sbiw	r30, 0x01	; 1
 1e8:	f1 f7       	brne	.-4      	; 0x1e6 <softuart_recv+0x96>
 1ea:	49 b1       	in	r20, 0x09	; 9
 1ec:	50 e0       	ldi	r21, 0x00	; 0
 1ee:	48 23       	and	r20, r24
 1f0:	59 23       	and	r21, r25
 1f2:	45 2b       	or	r20, r21
 1f4:	09 f0       	breq	.+2      	; 0x1f8 <softuart_recv+0xa8>
 1f6:	20 61       	ori	r18, 0x10	; 16
 1f8:	e0 ed       	ldi	r30, 0xD0	; 208
 1fa:	f0 e0       	ldi	r31, 0x00	; 0
 1fc:	31 97       	sbiw	r30, 0x01	; 1
 1fe:	f1 f7       	brne	.-4      	; 0x1fc <softuart_recv+0xac>
 200:	49 b1       	in	r20, 0x09	; 9
 202:	50 e0       	ldi	r21, 0x00	; 0
 204:	48 23       	and	r20, r24
 206:	59 23       	and	r21, r25
 208:	45 2b       	or	r20, r21
 20a:	09 f0       	breq	.+2      	; 0x20e <softuart_recv+0xbe>
 20c:	20 62       	ori	r18, 0x20	; 32
 20e:	e0 ed       	ldi	r30, 0xD0	; 208
 210:	f0 e0       	ldi	r31, 0x00	; 0
 212:	31 97       	sbiw	r30, 0x01	; 1
 214:	f1 f7       	brne	.-4      	; 0x212 <softuart_recv+0xc2>
 216:	49 b1       	in	r20, 0x09	; 9
 218:	50 e0       	ldi	r21, 0x00	; 0
 21a:	48 23       	and	r20, r24
 21c:	59 23       	and	r21, r25
 21e:	45 2b       	or	r20, r21
 220:	09 f0       	breq	.+2      	; 0x224 <softuart_recv+0xd4>
 222:	20 64       	ori	r18, 0x40	; 64
 224:	e0 ed       	ldi	r30, 0xD0	; 208
 226:	f0 e0       	ldi	r31, 0x00	; 0
 228:	31 97       	sbiw	r30, 0x01	; 1
 22a:	f1 f7       	brne	.-4      	; 0x228 <softuart_recv+0xd8>
 22c:	49 b1       	in	r20, 0x09	; 9
 22e:	50 e0       	ldi	r21, 0x00	; 0
 230:	48 23       	and	r20, r24
 232:	59 23       	and	r21, r25
 234:	45 2b       	or	r20, r21
 236:	09 f0       	breq	.+2      	; 0x23a <softuart_recv+0xea>
 238:	20 68       	ori	r18, 0x80	; 128
 23a:	e0 ed       	ldi	r30, 0xD0	; 208
 23c:	f0 e0       	ldi	r31, 0x00	; 0
 23e:	31 97       	sbiw	r30, 0x01	; 1
 240:	f1 f7       	brne	.-4      	; 0x23e <softuart_recv+0xee>
 242:	3a e6       	ldi	r19, 0x6A	; 106
 244:	3a 95       	dec	r19
 246:	f1 f7       	brne	.-4      	; 0x244 <softuart_recv+0xf4>
 248:	30 91 00 01 	lds	r19, 0x0100	; 0x800100 <__data_end>
 24c:	31 11       	cpse	r19, r1
 24e:	07 c0       	rjmp	.+14     	; 0x25e <softuart_recv+0x10e>
 250:	38 ec       	ldi	r19, 0xC8	; 200
 252:	e3 e0       	ldi	r30, 0x03	; 3
 254:	f1 e0       	ldi	r31, 0x01	; 1
 256:	df 01       	movw	r26, r30
 258:	1d 92       	st	X+, r1
 25a:	3a 95       	dec	r19
 25c:	e9 f7       	brne	.-6      	; 0x258 <softuart_recv+0x108>
 25e:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__data_end>
 262:	f0 e0       	ldi	r31, 0x00	; 0
 264:	ed 5f       	subi	r30, 0xFD	; 253
 266:	fe 4f       	sbci	r31, 0xFE	; 254
 268:	20 83       	st	Z, r18
 26a:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_end>
 26e:	2f 5f       	subi	r18, 0xFF	; 255
 270:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__data_end>
 274:	31 e0       	ldi	r19, 0x01	; 1
 276:	28 3c       	cpi	r18, 0xC8	; 200
 278:	08 f4       	brcc	.+2      	; 0x27c <softuart_recv+0x12c>
 27a:	30 e0       	ldi	r19, 0x00	; 0
 27c:	b8 e3       	ldi	r27, 0x38	; 56
 27e:	3b 9f       	mul	r19, r27
 280:	20 0d       	add	r18, r0
 282:	11 24       	eor	r1, r1
 284:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__data_end>
 288:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
 28c:	89 2b       	or	r24, r25
 28e:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
 292:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <rx_listening>
 296:	08 95       	ret

00000298 <softuart_read>:
 298:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <rx_listening>
 29c:	81 11       	cpse	r24, r1
 29e:	fc cf       	rjmp	.-8      	; 0x298 <softuart_read>
 2a0:	83 e0       	ldi	r24, 0x03	; 3
 2a2:	91 e0       	ldi	r25, 0x01	; 1
 2a4:	08 95       	ret

000002a6 <__vector_5>:
 2a6:	1f 92       	push	r1
 2a8:	0f 92       	push	r0
 2aa:	0f b6       	in	r0, 0x3f	; 63
 2ac:	0f 92       	push	r0
 2ae:	11 24       	eor	r1, r1
 2b0:	2f 93       	push	r18
 2b2:	3f 93       	push	r19
 2b4:	4f 93       	push	r20
 2b6:	5f 93       	push	r21
 2b8:	6f 93       	push	r22
 2ba:	7f 93       	push	r23
 2bc:	8f 93       	push	r24
 2be:	9f 93       	push	r25
 2c0:	af 93       	push	r26
 2c2:	bf 93       	push	r27
 2c4:	ef 93       	push	r30
 2c6:	ff 93       	push	r31
 2c8:	89 b1       	in	r24, 0x09	; 9
 2ca:	90 e0       	ldi	r25, 0x00	; 0
 2cc:	00 90 02 01 	lds	r0, 0x0102	; 0x800102 <RX>
 2d0:	02 c0       	rjmp	.+4      	; 0x2d6 <__vector_5+0x30>
 2d2:	95 95       	asr	r25
 2d4:	87 95       	ror	r24
 2d6:	0a 94       	dec	r0
 2d8:	e2 f7       	brpl	.-8      	; 0x2d2 <__vector_5+0x2c>
 2da:	80 ff       	sbrs	r24, 0
 2dc:	39 df       	rcall	.-398    	; 0x150 <softuart_recv>
 2de:	ff 91       	pop	r31
 2e0:	ef 91       	pop	r30
 2e2:	bf 91       	pop	r27
 2e4:	af 91       	pop	r26
 2e6:	9f 91       	pop	r25
 2e8:	8f 91       	pop	r24
 2ea:	7f 91       	pop	r23
 2ec:	6f 91       	pop	r22
 2ee:	5f 91       	pop	r21
 2f0:	4f 91       	pop	r20
 2f2:	3f 91       	pop	r19
 2f4:	2f 91       	pop	r18
 2f6:	0f 90       	pop	r0
 2f8:	0f be       	out	0x3f, r0	; 63
 2fa:	0f 90       	pop	r0
 2fc:	1f 90       	pop	r1
 2fe:	18 95       	reti

00000300 <usart_enable>:
 300:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 304:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 308:	e0 ec       	ldi	r30, 0xC0	; 192
 30a:	f0 e0       	ldi	r31, 0x00	; 0
 30c:	10 82       	st	Z, r1
 30e:	10 82       	st	Z, r1
 310:	88 e1       	ldi	r24, 0x18	; 24
 312:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 316:	8e e0       	ldi	r24, 0x0E	; 14
 318:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 31c:	08 95       	ret

0000031e <usart_write>:
 31e:	fc 01       	movw	r30, r24
 320:	20 81       	ld	r18, Z
 322:	22 23       	and	r18, r18
 324:	51 f0       	breq	.+20     	; 0x33a <usart_write+0x1c>
 326:	31 96       	adiw	r30, 0x01	; 1
 328:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 32c:	95 ff       	sbrs	r25, 5
 32e:	fc cf       	rjmp	.-8      	; 0x328 <usart_write+0xa>
 330:	20 93 c6 00 	sts	0x00C6, r18	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 334:	21 91       	ld	r18, Z+
 336:	21 11       	cpse	r18, r1
 338:	f7 cf       	rjmp	.-18     	; 0x328 <usart_write+0xa>
 33a:	08 95       	ret

0000033c <_exit>:
 33c:	f8 94       	cli

0000033e <__stop_program>:
 33e:	ff cf       	rjmp	.-2      	; 0x33e <__stop_program>
