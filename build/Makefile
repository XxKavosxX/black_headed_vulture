# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.10

# Default target executed when no arguments are given to make.
default_target: all

.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:


#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:


# Remove some rules from gmake that .SUFFIXES does not remove.
SUFFIXES =

.SUFFIXES: .hpux_make_needs_suffix_list


# Suppress display of executed commands.
$(VERBOSE).SILENT:


# A target that is always out of date.
cmake_force:

.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/bin/cmake

# The command to remove a file.
RM = /usr/bin/cmake -E remove -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/maike/Github/black_headed_vulture

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/maike/Github/black_headed_vulture/build

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/usr/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache

.PHONY : rebuild_cache/fast

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "No interactive CMake dialog available..."
	/usr/bin/cmake -E echo No\ interactive\ CMake\ dialog\ available.
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache

.PHONY : edit_cache/fast

# The main all target
all: cmake_check_build_system
	$(CMAKE_COMMAND) -E cmake_progress_start /home/maike/Github/black_headed_vulture/build/CMakeFiles /home/maike/Github/black_headed_vulture/build/CMakeFiles/progress.marks
	$(MAKE) -f CMakeFiles/Makefile2 all
	$(CMAKE_COMMAND) -E cmake_progress_start /home/maike/Github/black_headed_vulture/build/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	$(MAKE) -f CMakeFiles/Makefile2 clean
.PHONY : clean

# The main clean target
clean/fast: clean

.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	$(MAKE) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	$(MAKE) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	$(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

#=============================================================================
# Target rules for targets named LIBS

# Build rule for target.
LIBS: cmake_check_build_system
	$(MAKE) -f CMakeFiles/Makefile2 LIBS
.PHONY : LIBS

# fast build rule for target.
LIBS/fast:
	$(MAKE) -f src/CMakeFiles/LIBS.dir/build.make src/CMakeFiles/LIBS.dir/build
.PHONY : LIBS/fast

#=============================================================================
# Target rules for targets named size_MAIN

# Build rule for target.
size_MAIN: cmake_check_build_system
	$(MAKE) -f CMakeFiles/Makefile2 size_MAIN
.PHONY : size_MAIN

# fast build rule for target.
size_MAIN/fast:
	$(MAKE) -f app/CMakeFiles/size_MAIN.dir/build.make app/CMakeFiles/size_MAIN.dir/build
.PHONY : size_MAIN/fast

#=============================================================================
# Target rules for targets named MAIN.elf

# Build rule for target.
MAIN.elf: cmake_check_build_system
	$(MAKE) -f CMakeFiles/Makefile2 MAIN.elf
.PHONY : MAIN.elf

# fast build rule for target.
MAIN.elf/fast:
	$(MAKE) -f app/CMakeFiles/MAIN.elf.dir/build.make app/CMakeFiles/MAIN.elf.dir/build
.PHONY : MAIN.elf/fast

#=============================================================================
# Target rules for targets named upload_MAIN

# Build rule for target.
upload_MAIN: cmake_check_build_system
	$(MAKE) -f CMakeFiles/Makefile2 upload_MAIN
.PHONY : upload_MAIN

# fast build rule for target.
upload_MAIN/fast:
	$(MAKE) -f app/CMakeFiles/upload_MAIN.dir/build.make app/CMakeFiles/upload_MAIN.dir/build
.PHONY : upload_MAIN/fast

#=============================================================================
# Target rules for targets named upload_eeprom_MAIN

# Build rule for target.
upload_eeprom_MAIN: cmake_check_build_system
	$(MAKE) -f CMakeFiles/Makefile2 upload_eeprom_MAIN
.PHONY : upload_eeprom_MAIN

# fast build rule for target.
upload_eeprom_MAIN/fast:
	$(MAKE) -f app/CMakeFiles/upload_eeprom_MAIN.dir/build.make app/CMakeFiles/upload_eeprom_MAIN.dir/build
.PHONY : upload_eeprom_MAIN/fast

#=============================================================================
# Target rules for targets named firmwaresize_MAIN.awk

# Build rule for target.
firmwaresize_MAIN.awk: cmake_check_build_system
	$(MAKE) -f CMakeFiles/Makefile2 firmwaresize_MAIN.awk
.PHONY : firmwaresize_MAIN.awk

# fast build rule for target.
firmwaresize_MAIN.awk/fast:
	$(MAKE) -f app/CMakeFiles/firmwaresize_MAIN.awk.dir/build.make app/CMakeFiles/firmwaresize_MAIN.awk.dir/build
.PHONY : firmwaresize_MAIN.awk/fast

#=============================================================================
# Target rules for targets named MAIN

# Build rule for target.
MAIN: cmake_check_build_system
	$(MAKE) -f CMakeFiles/Makefile2 MAIN
.PHONY : MAIN

# fast build rule for target.
MAIN/fast:
	$(MAKE) -f app/CMakeFiles/MAIN.dir/build.make app/CMakeFiles/MAIN.dir/build
.PHONY : MAIN/fast

#=============================================================================
# Target rules for targets named disassemble_MAIN

# Build rule for target.
disassemble_MAIN: cmake_check_build_system
	$(MAKE) -f CMakeFiles/Makefile2 disassemble_MAIN
.PHONY : disassemble_MAIN

# fast build rule for target.
disassemble_MAIN/fast:
	$(MAKE) -f app/CMakeFiles/disassemble_MAIN.dir/build.make app/CMakeFiles/disassemble_MAIN.dir/build
.PHONY : disassemble_MAIN/fast

#=============================================================================
# Target rules for targets named get_status_MAIN

# Build rule for target.
get_status_MAIN: cmake_check_build_system
	$(MAKE) -f CMakeFiles/Makefile2 get_status_MAIN
.PHONY : get_status_MAIN

# fast build rule for target.
get_status_MAIN/fast:
	$(MAKE) -f app/CMakeFiles/get_status_MAIN.dir/build.make app/CMakeFiles/get_status_MAIN.dir/build
.PHONY : get_status_MAIN/fast

#=============================================================================
# Target rules for targets named firmwaresize_USART.awk

# Build rule for target.
firmwaresize_USART.awk: cmake_check_build_system
	$(MAKE) -f CMakeFiles/Makefile2 firmwaresize_USART.awk
.PHONY : firmwaresize_USART.awk

# fast build rule for target.
firmwaresize_USART.awk/fast:
	$(MAKE) -f tests/CMakeFiles/firmwaresize_USART.awk.dir/build.make tests/CMakeFiles/firmwaresize_USART.awk.dir/build
.PHONY : firmwaresize_USART.awk/fast

#=============================================================================
# Target rules for targets named size_USART

# Build rule for target.
size_USART: cmake_check_build_system
	$(MAKE) -f CMakeFiles/Makefile2 size_USART
.PHONY : size_USART

# fast build rule for target.
size_USART/fast:
	$(MAKE) -f tests/CMakeFiles/size_USART.dir/build.make tests/CMakeFiles/size_USART.dir/build
.PHONY : size_USART/fast

#=============================================================================
# Target rules for targets named USART

# Build rule for target.
USART: cmake_check_build_system
	$(MAKE) -f CMakeFiles/Makefile2 USART
.PHONY : USART

# fast build rule for target.
USART/fast:
	$(MAKE) -f tests/CMakeFiles/USART.dir/build.make tests/CMakeFiles/USART.dir/build
.PHONY : USART/fast

#=============================================================================
# Target rules for targets named USART.elf

# Build rule for target.
USART.elf: cmake_check_build_system
	$(MAKE) -f CMakeFiles/Makefile2 USART.elf
.PHONY : USART.elf

# fast build rule for target.
USART.elf/fast:
	$(MAKE) -f tests/CMakeFiles/USART.elf.dir/build.make tests/CMakeFiles/USART.elf.dir/build
.PHONY : USART.elf/fast

#=============================================================================
# Target rules for targets named upload_USART

# Build rule for target.
upload_USART: cmake_check_build_system
	$(MAKE) -f CMakeFiles/Makefile2 upload_USART
.PHONY : upload_USART

# fast build rule for target.
upload_USART/fast:
	$(MAKE) -f tests/CMakeFiles/upload_USART.dir/build.make tests/CMakeFiles/upload_USART.dir/build
.PHONY : upload_USART/fast

#=============================================================================
# Target rules for targets named disassemble_USART

# Build rule for target.
disassemble_USART: cmake_check_build_system
	$(MAKE) -f CMakeFiles/Makefile2 disassemble_USART
.PHONY : disassemble_USART

# fast build rule for target.
disassemble_USART/fast:
	$(MAKE) -f tests/CMakeFiles/disassemble_USART.dir/build.make tests/CMakeFiles/disassemble_USART.dir/build
.PHONY : disassemble_USART/fast

#=============================================================================
# Target rules for targets named upload_eeprom_USART

# Build rule for target.
upload_eeprom_USART: cmake_check_build_system
	$(MAKE) -f CMakeFiles/Makefile2 upload_eeprom_USART
.PHONY : upload_eeprom_USART

# fast build rule for target.
upload_eeprom_USART/fast:
	$(MAKE) -f tests/CMakeFiles/upload_eeprom_USART.dir/build.make tests/CMakeFiles/upload_eeprom_USART.dir/build
.PHONY : upload_eeprom_USART/fast

#=============================================================================
# Target rules for targets named get_status_USART

# Build rule for target.
get_status_USART: cmake_check_build_system
	$(MAKE) -f CMakeFiles/Makefile2 get_status_USART
.PHONY : get_status_USART

# fast build rule for target.
get_status_USART/fast:
	$(MAKE) -f tests/CMakeFiles/get_status_USART.dir/build.make tests/CMakeFiles/get_status_USART.dir/build
.PHONY : get_status_USART/fast

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... rebuild_cache"
	@echo "... edit_cache"
	@echo "... LIBS"
	@echo "... size_MAIN"
	@echo "... MAIN.elf"
	@echo "... upload_MAIN"
	@echo "... upload_eeprom_MAIN"
	@echo "... firmwaresize_MAIN.awk"
	@echo "... MAIN"
	@echo "... disassemble_MAIN"
	@echo "... get_status_MAIN"
	@echo "... firmwaresize_USART.awk"
	@echo "... size_USART"
	@echo "... USART"
	@echo "... USART.elf"
	@echo "... upload_USART"
	@echo "... disassemble_USART"
	@echo "... upload_eeprom_USART"
	@echo "... get_status_USART"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	$(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

